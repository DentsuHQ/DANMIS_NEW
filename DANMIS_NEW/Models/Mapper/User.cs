#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Generated at 10/24/2017 11:43:17
//       Runtime Version: 4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Newtonsoft.Json;
using DANMIS_NEW.ViewModel;
using DANMIS_NEW.ViewModel.Struct;

namespace DANMIS_NEW.Models
{
    public partial class User
    {
        /// <summary>
        /// 將 ViewModel 轉換為 Model 物件
        /// </summary>
        /// <param name="source"></param>
        /// <returns></returns>
        public static User Convert(UserViewModel source)
        {
            return source == null ? null : new User
            {
                SequenceNo = source.SequenceNo,
                ID = source.ID,
                Name = source.Name ?? string.Empty,
                Account = source.Account ?? string.Empty,
                Password = source.Password ?? string.Empty,
                Email = source.Email ?? string.Empty,
                ContactTel = source.ContactTel ?? string.Empty,
                IsEnable = source.IsEnable,
                CreateUser = source.CreateUser ?? string.Empty,
                CreateTime = source.CreateTime,
                UpdateUser = source.UpdateUser ?? string.Empty,
                UpdateTime = source.UpdateTime,
                LoginTime = source.LoginTime,
                ChangePassTime = source.ChangePassTime,
                PhotoPath = source.PhotoPath ?? string.Empty,
                IsToken = false,
                HashToken = source.HashToken ?? string.Empty,
                TokenData = string.Empty,
                FreeFields = null == source.FreeFields ? "{}" : source.FreeFields.ToString(),
                DefaultIndex = source.DefaultIndex,
                DepartmentID = source.DepartmentID,
                DepartmentIDs = JsonConvert.SerializeObject(source.DepartmentIDs),
                EmpUniqNo = source.EmpUniqNo,
                EmpEngName = source.EmpEngName ?? string.Empty,
                RegionCode = source.RegionCode,
                CompCode = source.CompCode,
                OfficeCode = source.OfficeCode,
                DeptCode = source.DeptCode,
                EmpNo = source.EmpNo,
                EmpEngOfficialName = source.EmpEngOfficialName,
                EmpLocName = source.EmpLocName,
                EmpGender = source.EmpGender,
                JobTitleCode = source.JobTitleCode,
                EmpStartDate = source.EmpStartDate,
                EmpQuitDate = source.EmpQuitDate,
                EmpStatusCode = source.EmpStatusCode,
                JobStatusCode = source.JobStatusCode,
                EmpCompEmail = source.EmpCompEmail,
                EmpADLoginID = source.EmpADLoginID,
                EmpComputerID = source.EmpComputerID,
                EmpPrivateEMail = source.EmpPrivateEMail,
                EmpHomePhone = source.EmpHomePhone,
                EmpMobilePhone = source.EmpMobilePhone,
                BossEmpUniqNo = source.BossEmpUniqNo,
                EmpAcctStatus = source.EmpAcctStatus,
                WritingLanguage = source.WritingLanguage,
                SysLanguage = source.SysLanguage,
                EmpBankAccount = source.EmpBankAccount,
                EmpPhoto = source.EmpPhoto,
                CheckAttendance = source.CheckAttendance,
                ExtDisplayFlag = source.ExtDisplayFlag,
                SpcInTime = source.SpcInTime,
                SpcOutTime = source.SpcOutTime,
                InputBy = source.InputBy,
                InputDate = source.InputDate,
                ChangeBe = source.ChangeBe,
                ChangeDate = source.ChangeDate,
                Random = source.Random,
                NextBossEmpUniqNo = source.NextBossEmpUniqNo,
                Do_PDP = source.Do_PDP,
                EmpExtNo = source.EmpExtNo,
                WDID = source.WDID,
                TaxiAccount = source.TaxiAccount,
                BrandCode = source.BrandCode,
                EmpType = source.EmpType,
                CostCenter = source.CostCenter,
                ProfitCenter = source.ProfitCenter,
                LastWorkDate = source.LastWorkDate,
                CardNo = source.CardNo,
                FloorNo = source.FloorNo,
                SeatNo = source.SeatNo,
                MotoNo = source.MotoNo,
                MotocycleID = source.MotocycleID,
                ETag = source.ETag,
                MotoStartDate = source.MotoStartDate,
                FaxNo = source.FaxNo,
                LeaseLine = source.LeaseLine,
                AssestNo = source.AssestNo,
                ThirdCode = source.ThirdCode,

            };
        }

        /// <summary>
        /// 將 Model 轉換為 ViewModel 物件
        /// </summary>
        /// <param name="source"></param>
        /// <returns></returns>
        public static UserViewModel Convert(User source)
        {
            var freeFields = null != source && !string.IsNullOrEmpty(source.FreeFields) ?
                new TemplateFields(source.FreeFields) :
                new TemplateFields();

            return source == null ? null : new UserViewModel
            {
                SequenceNo = source.SequenceNo,
                ID = source.ID,
                Name = source.Name ?? string.Empty,
                Account = source.Account ?? string.Empty,
                Password = source.Password ?? string.Empty,
                Email = source.Email ?? string.Empty,
                ContactTel = source.ContactTel ?? string.Empty,
                IsEnable = source.IsEnable,
                CreateUser = source.CreateUser ?? string.Empty,
                CreateTime = source.CreateTime,
                UpdateUser = source.UpdateUser ?? string.Empty,
                UpdateTime = source.UpdateTime,
                LoginTime = source.LoginTime,
                ChangePassTime = source.ChangePassTime,
                PhotoPath = source.PhotoPath ?? string.Empty,
                HashToken = source.HashToken ?? string.Empty,
                FreeFields = freeFields,
                DefaultIndex = source.DefaultIndex,
                DepartmentID = source.DepartmentID,
                DepartmentIDs = JsonConvert.DeserializeObject<List<Guid>>(source.DepartmentIDs),
                RoleID = source.Role.Select(x => x.ID).ToList(),
                EmpUniqNo = source.EmpUniqNo.HasValue ? source.EmpUniqNo.Value : 0,
                EmpEngName = source.EmpEngName ?? string.Empty,
                RegionCode = source.RegionCode,
                CompCode = source.CompCode,
                OfficeCode = source.OfficeCode,
                DeptCode = source.DeptCode,
                EmpNo = source.EmpNo,
                EmpEngOfficialName = source.EmpEngOfficialName,
                EmpLocName = source.EmpLocName,
                EmpGender = source.EmpGender,
                JobTitleCode = source.JobTitleCode,
                EmpStartDate = source.EmpStartDate.HasValue ? source.EmpStartDate.Value : default(DateTime),
                EmpQuitDate = source.EmpQuitDate.HasValue ? source.EmpQuitDate.Value : default(DateTime),
                EmpStatusCode = source.EmpStatusCode,
                JobStatusCode = source.JobStatusCode,
                EmpCompEmail = source.EmpCompEmail,
                EmpADLoginID = source.EmpADLoginID,
                EmpComputerID = source.EmpComputerID,
                EmpPrivateEMail = source.EmpPrivateEMail,
                EmpHomePhone = source.EmpHomePhone,
                EmpMobilePhone = source.EmpMobilePhone,
                BossEmpUniqNo = source.BossEmpUniqNo.HasValue ? source.BossEmpUniqNo.Value : 0,
                EmpAcctStatus = source.EmpAcctStatus,
                WritingLanguage = source.WritingLanguage,
                SysLanguage = source.SysLanguage,
                EmpBankAccount = source.EmpBankAccount,
                EmpPhoto = source.EmpPhoto,
                CheckAttendance = source.CheckAttendance,
                ExtDisplayFlag = source.ExtDisplayFlag,
                SpcInTime = source.SpcInTime,
                SpcOutTime = source.SpcOutTime,
                InputBy = source.InputBy.HasValue ? source.InputBy.Value : 0,
                InputDate = source.InputDate.HasValue ? source.InputDate.Value : default(DateTime),
                ChangeBe = source.ChangeBe.HasValue ? source.ChangeBe.Value : 0,
                ChangeDate = source.ChangeDate.HasValue ? source.ChangeDate.Value : default(DateTime),
                Random = source.Random,
                NextBossEmpUniqNo = source.NextBossEmpUniqNo.HasValue ? source.NextBossEmpUniqNo.Value : 0,
                Do_PDP = source.Do_PDP,
                EmpExtNo = source.EmpExtNo,
                WDID = source.WDID,
                TaxiAccount = source.TaxiAccount,
                BrandCode = source.BrandCode,
                EmpType = source.EmpType,
                CostCenter = source.CostCenter,
                ProfitCenter = source.ProfitCenter,
                LastWorkDate = source.LastWorkDate.HasValue ? source.LastWorkDate.Value : default(DateTime),
                CardNo = source.CardNo,
                FloorNo = source.FloorNo,
                SeatNo = source.SeatNo,
                MotoNo = source.MotoNo,
                MotocycleID = source.MotocycleID,
                ETag = source.ETag,
                MotoStartDate = source.MotoStartDate.HasValue ? source.MotoStartDate.Value : default(DateTime),
                FaxNo = source.FaxNo,
                LeaseLine = source.LeaseLine,
                AssestNo = source.AssestNo,
                ThirdCode = source.ThirdCode,

            };
        }

        /// <summary>
        /// 轉換運算子
        /// </summary>
        /// <param name="source"></param>
        public static explicit operator User(UserViewModel source)
        {
            return Convert(source);
        }

        /// <summary>
        /// 轉換運算子
        /// </summary>
        /// <param name="source"></param>
        public static explicit operator UserViewModel(User source)
        {
            return Convert(source);
        }
    }
}
#pragma warning restore 1591